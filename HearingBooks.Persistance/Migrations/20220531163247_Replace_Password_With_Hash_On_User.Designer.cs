// <auto-generated />
using System;
using EasySynthesis.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HearingBooks.Persistance.Migrations
{
    [DbContext(typeof(HearingBooksDbContext))]
    [Migration("20220531163247_Replace_Password_With_Hash_On_User")]
    partial class Replace_Password_With_Hash_On_User
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HearingBooks.Domain.Entities.DialogueSynthesis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BlobContainerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CharacterCount")
                        .HasColumnType("integer");

                    b.Property<string>("DialogueText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DurationInSeconds")
                        .HasColumnType("integer");

                    b.Property<Guid>("FirstSpeakerVoiceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<double>("PriceInUsd")
                        .HasColumnType("double precision");

                    b.Property<Guid>("SecondSpeakerVoiceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FirstSpeakerVoiceId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("SecondSpeakerVoiceId");

                    b.HasIndex("UserId");

                    b.ToTable("DialogueSyntheses");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.Preference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AcrylicEnabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("EmailNotificationsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.SynthesisPricing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("PriceInUsdPer1MCharacters")
                        .HasColumnType("integer");

                    b.Property<int>("SynthesisType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SynthesisPricings");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.TextSynthesis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BlobContainerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CharacterCount")
                        .HasColumnType("integer");

                    b.Property<int>("DurationInSeconds")
                        .HasColumnType("integer");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<double>("PriceInUsd")
                        .HasColumnType("double precision");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("SynthesisText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VoiceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("UserId");

                    b.HasIndex("VoiceId");

                    b.ToTable("TextSyntheses");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Balance")
                        .HasColumnType("double precision");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PreferenceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PreferenceId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.Voice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsMultilingual")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Voices");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.DialogueSynthesis", b =>
                {
                    b.HasOne("HearingBooks.Domain.Entities.Voice", "FirstSpeakerVoice")
                        .WithMany()
                        .HasForeignKey("FirstSpeakerVoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HearingBooks.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HearingBooks.Domain.Entities.Voice", "SecondSpeakerVoice")
                        .WithMany()
                        .HasForeignKey("SecondSpeakerVoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HearingBooks.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstSpeakerVoice");

                    b.Navigation("Language");

                    b.Navigation("SecondSpeakerVoice");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.TextSynthesis", b =>
                {
                    b.HasOne("HearingBooks.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HearingBooks.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HearingBooks.Domain.Entities.Voice", "Voice")
                        .WithMany()
                        .HasForeignKey("VoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("User");

                    b.Navigation("Voice");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.User", b =>
                {
                    b.HasOne("HearingBooks.Domain.Entities.Preference", "Preference")
                        .WithMany()
                        .HasForeignKey("PreferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Preference");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.Voice", b =>
                {
                    b.HasOne("HearingBooks.Domain.Entities.Language", null)
                        .WithMany("Voices")
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("HearingBooks.Domain.Entities.Language", b =>
                {
                    b.Navigation("Voices");
                });
#pragma warning restore 612, 618
        }
    }
}
